theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
# geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
tmp <- fread('/Users/johanvandenhoogen/Downloads/Result_26.csv')
tmp
library(data.table)
library(tidyverse)
library(RColorBrewer)
setwd('/Users/johanvandenhoogen/SPUN/richness_maps')
# Define palette
paletteForUse <- c('#d10000', '#ff6622', '#ffda21', '#33dd00', '#1133cc', '#220066', '#330044')
# List files in output folder
list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs')
# List files in output folder
files <- list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs')
# List files in output folder
files <- list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs')
files
# List csv files in output folder
files <- list.files('output', pattern = 'pred_obs.csv', full.names = T)
files
# List csv files in output folder
files <- list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs', pattern = 'pred_obs.csv', full.names = T)
files
basename(files[1])
file
file = files[1]
varofinterest <- basename(file)
varofinterest
basename(file) %>%
str_split(., '_')
basename(file) %>%
str_split(., '_')[-1]
basename(file) %>%
str_split(., '_')[[-1]]
basename(file)
basename(file) %>% str_detect("arbus")
basename(file) %>% str_detect("ecto")
'arbuscular_mycorrhizal'
varofinterest <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{
'arbuscular_mycorrhizal'
}
varofinterest
df <- fread(file) %>%
group_by(sample_id)
varofinterest <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
(basename(file)
basename(file)
basename(file)
basename(file) %>% str_split('mycrozzhizal_')
basename(file) %>% str_split('mycrozzhizal_')
basename(file) %>% str_split('mycorrhizal')
basename(file) %>% str_split('mycorrhizal_')
basename(file) %>% str_split('mycorrhizal_') %>% str_remove("_pred_obs.csv")
basename(file) %>% str_split('mycorrhizal_') %>% tail() %>% str_remove("_pred_obs.csv")
basename(file) %>% str_split('mycorrhizal_') %>% last()
basename(file) %>% str_split('mycorrhizal_') %>% last()
basename(file) %>% str_split('mycorrhizal_') %>% last()
basename(file) %>% str_split('mycorrhizal_') %>% last()
basename(file) %>% str_split('mycorrhizal_')
basename(file) %>% str_split('mycorrhizal_') %>% last()
basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last()
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv")
varofinterest
paste0(guild, "_", varofinterest)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
paste0(guild, "_", varofinterest)
df$dens <- col2rgb(densCols(df[[paste0(guild, "_", varofinterest)]], df[[paste0(guild, "_", varofinterest, "_Predicted")]]))[1,] + 1L
df
col2rgb(densCols(df[[paste0(guild, "_", varofinterest)]], df[[paste0(guild, "_", varofinterest, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
library(data.table)
library(tidyverse)
library(RColorBrewer)
df$dens <- col2rgb(densCols(df[[paste0(guild, "_", varofinterest)]], df[[paste0(guild, "_", varofinterest, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
colors[df$dens]
paletteForUse <- c('#d10000', '#ff6622', '#ffda21', '#33dd00', '#1133cc', '#220066', '#330044')
colors <-  colorRampPalette(paletteForUse)(256)
# Map densities to colors
df$colors = colors[df$dens]
df %>%
ggplot(aes(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
xlim(c(0, 600)) +
ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(y = "Predicted ECM Richness", x = "Observed ECM Richness")
df %>%
ggplot(aes(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))) +
geom_point(color = df$colors)
paste0(guild, "_", varofinterest)
df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
xlim(c(0, 600)) +
ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(y = "Predicted ECM Richness", x = "Observed ECM Richness")
df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(y = "Predicted ECM Richness", x = "Observed ECM Richness")
paste0(guild, "_", varofinterest)
df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = )) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = )) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = )) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
files
paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '.png')
for (file in files){
df <- fread(file) %>%
group_by(sample_id)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv")
df$dens <- col2rgb(densCols(df[[paste0(guild, "_", varofinterest)]], df[[paste0(guild, "_", varofinterest, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
plot <- df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '.png'), plot)
}
file
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv")
df$dens <- col2rgb(densCols(df[[paste0(guild, "_", varofinterest)]], df[[paste0(guild, "_", varofinterest, "_Predicted")]]))[1,] + 1L
varofinterest
varofinterest
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("sampling_intensity")
df$dens <- col2rgb(densCols(df[[paste0(guild, "_", varofinterest)]], df[[paste0(guild, "_", varofinterest, "_Predicted")]]))[1,] + 1L
varofinterest
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("_sampling_density")
df$dens <- col2rgb(densCols(df[[paste0(guild, "_", varofinterest)]], df[[paste0(guild, "_", varofinterest, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
plot <- df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
basename(file) %>% str_detect('_sampling_density')
sampling_intensity <- basename(file) %>% str_detect('_sampling_density')
if (sampling_intensity)
if (sampling_intensity)
# List csv files in output folder
files <- list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs', pattern = 'pred_obs.csv', full.names = T)
for (file in files){
df <- fread(file) %>%
group_by(sample_id)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
sampling_intensity <- basename(file) %>% str_detect('_sampling_density')
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("_sampling_density")
df$dens <- col2rgb(densCols(df[[paste0(guild, "_", varofinterest)]], df[[paste0(guild, "_", varofinterest, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
plot <- df %>%
ggplot(aes_string(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
if (sampling_intensity == T){
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '_sampling_density.png'), plot)
} else{
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '.png'), plot)
}
}
file
df <- fread(file) %>%
group_by(sample_id)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
sampling_intensity <- basename(file) %>% str_detect('_sampling_density')
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("_sampling_density")
varofinterest
varname <- if (varofinterest == 'richness'){
paste0(guild, "_", varofinterest)
} else {
varofinterest
}
df$dens <- col2rgb(densCols(df[[varname]], df[[paste0(varname, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
plot <- df %>%
ggplot(aes_string(x = varname, y = paste0(varname, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
plot
# List csv files in output folder
files <- list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs', pattern = 'pred_obs.csv', full.names = T)
for (file in files){
df <- fread(file) %>%
group_by(sample_id)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
sampling_intensity <- basename(file) %>% str_detect('_sampling_density')
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("_sampling_density")
varname <- if (varofinterest == 'richness'){
paste0(guild, "_", varofinterest)
} else {
varofinterest
}
df$dens <- col2rgb(densCols(df[[varname]], df[[paste0(varname, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
plot <- df %>%
ggplot(aes_string(x = varname, y = paste0(varname, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
if (sampling_intensity == T){
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '_sampling_density.png'), plot)
} else{
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '.png'), plot)
}
}
file
df <- fread(file) %>%
group_by(sample_id)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
sampling_intensity <- basename(file) %>% str_detect('_sampling_density')
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("_sampling_density")
varname <- if (varofinterest == 'richness'){
paste0(guild, "_", varofinterest)
} else {
varofinterest
}
df$dens <- col2rgb(densCols(df[[varname]], df[[paste0(varname, "_Predicted")]]))[1,] + 1L
col2rgb(densCols(df[[varname]], df[[paste0(varname, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
# Map densities to colors
df$colors = colors[df$dens]
plot <- df %>%
ggplot(aes_string(x = varname, y = paste0(varname, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
plot
df
View(df)
e
df <- fread(file) %>%
group_by(sample_id)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
sampling_intensity <- basename(file) %>% str_detect('_sampling_density')
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("_sampling_density")
varname <- if (varofinterest == 'richness'){
paste0(guild, "_", varofinterest)
} else {
varofinterest
}
df$dens <- col2rgb(densCols(df[[varname]], df[[paste0(varname, "_Predicted")]]))[1,] + 1L
df
View(df)
# List csv files in output folder
files <- list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs', pattern = 'pred_obs.csv', full.names = T)
for (file in files){
df <- fread(file) %>%
group_by(sample_id)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
sampling_intensity <- basename(file) %>% str_detect('_sampling_density')
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("_sampling_density")
varname <- if (varofinterest == 'richness'){
paste0(guild, "_", varofinterest)
} else {
varofinterest
}
df$dens <- col2rgb(densCols(df[[varname]], df[[paste0(varname, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
plot <- df %>%
ggplot(aes_string(x = varname, y = paste0(varname, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
if (sampling_intensity == T){
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '_sampling_density.png'), plot)
} else{
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '.png'), plot)
}
}
plot <- df %>%
ggplot(aes_string(x = varname, y = paste0(varname, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
coord_fixed() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
plot
plot <- df %>%
ggplot(aes_string(x = varname, y = paste0(varname, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
coord_fixed() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
scale_x_continuous(limits = c(min(df[[varname]], df[[paste0(varname, "_Predicted")]]),
max(df[[varname]], df[[paste0(varname, "_Predicted")]]))) +
scale_y_continuous(limits = c(min(df[[varname]], df[[paste0(varname, "_Predicted")]]),
max(df[[varname]], df[[paste0(varname, "_Predicted")]]))) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
plot
# List csv files in output folder
files <- list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs', pattern = 'pred_obs.csv', full.names = T)
# List csv files in output folder
files <- list.files('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs', pattern = 'pred_obs.csv', full.names = T)
for (file in files){
df <- fread(file) %>%
group_by(sample_id)
guild <- if (basename(file) %>% str_detect("ecto")) {'ectomycorrhizal'} else{'arbuscular_mycorrhizal'}
sampling_intensity <- basename(file) %>% str_detect('_sampling_density')
varofinterest <- basename(file) %>% str_split('mycorrhizal_') %>% last() %>% last() %>% str_remove("_pred_obs.csv") %>%
str_remove("_sampling_density")
varname <- if (varofinterest == 'richness'){
paste0(guild, "_", varofinterest)
} else {
varofinterest
}
df$dens <- col2rgb(densCols(df[[varname]], df[[paste0(varname, "_Predicted")]]))[1,] + 1L
# Map densities to colors
df$colors = colors[df$dens]
plot <- df %>%
ggplot(aes_string(x = varname, y = paste0(varname, "_Predicted"))) +
geom_point(color = df$colors) +
scale_color_manual(values = rev(brewer.pal(6, "Paired"))) +
geom_abline(linetype = 2) +
geom_smooth(method = 'lm', formula = 'y ~ x', color = 'black', lwd = 0.5, se = F) +
# xlim(c(0, 600)) +
# ylim(c(0, 600)) +
# scale_x_log10() + scale_y_log10() +
# coord_fixed() +
theme_classic() +
theme(legend.position = "none",
aspect.ratio = 1) +
scale_x_continuous(limits = c(min(df[[varname]], df[[paste0(varname, "_Predicted")]]),
max(df[[varname]], df[[paste0(varname, "_Predicted")]]))) +
scale_y_continuous(limits = c(min(df[[varname]], df[[paste0(varname, "_Predicted")]]),
max(df[[varname]], df[[paste0(varname, "_Predicted")]]))) +
labs(x = paste0(guild, "_", varofinterest), y = paste0(guild, "_", varofinterest, "_Predicted"))
if (sampling_intensity == T){
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '_sampling_density.png'), plot)
} else{
ggsave(paste0('/Users/johanvandenhoogen/SPUN/richness_maps/output/pred_obs/', basename(file) %>% str_remove('.csv'), '.png'), plot)
}
}
