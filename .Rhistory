strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1),
after_stat(b_2))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ b + log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1),
after_stat(b_2))),
formula =  y ~ b + log(x),
output.type = "numeric",
parse = TRUE
)
plot
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1),
after_stat(b_2))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
eq_fmt <- "`y`~`=`%.3g~italic(e)^{%.3g~`x`}"
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
eq_fmt <- "`y`~`=`~%.3g~italic(e)^{%.3g~`x`}"
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(#eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
?stat_poly_eq
# Fit the model separately.
model <- nls(mean ~ a + b * exp(c * buffer_size/1000), data = df, start = list(a = 0, b = 1, c = 0))
# Fit the model separately.
model <- nls(mean ~ a + b * exp(c * buffer_size/1000), data = df, start = list(a = 0.2, b = 0.6, c = 10))
# Fit the model separately.
model <- nls(mean ~ a + b * log(c * buffer_size/1000), data = df, start = list(a = 0.2, b = 0.6, c = 10))
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(#eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
eq_fmt <- "`y`~`=`~%.3g~italic(e)^{%.3g~`x`}"
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(#eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'loess',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
warnings()
df
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
log(1)
log(1001/1000)
# Create the plot.
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = "nls",
formula = y ~ a + b * exp(c * x),
method.args = list(start = list(a = 0, b = 1, c = 0)),
aes(color = Guild),
se = FALSE) +
annotate("text", x = 1, y = 1,
label = sprintf("y = %.3g + %.3g * exp(%.3g * x)", coefficients[1], coefficients[2], coefficients[3]))
plot
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
eq_fmt <- "`y`~`=`~`%.3g + %.3g log(x)`"
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
df <- fread('/Users/johanvandenhoogen/SPUN/richness_maps/output/SLOO_CV_AM.csv') %>%
group_by(buffer_size) %>%
summarise(lower = min(r2), upper = max(r2), mean = mean(r2)) %>%
mutate(Guild = 'Arbuscular Mycorrhizal') %>%
rbind(., fread('/Users/johanvandenhoogen/SPUN/richness_maps/output/SLOO_CV_EM.csv') %>%
group_by(buffer_size) %>%
summarise(lower = min(r2), upper = max(r2), mean = mean(r2)) %>%
mutate(Guild = 'Ectomycorrhizal'))
library(ggpmisc)
eq_fmt <- "`y`~`=`~%.3g~italic(e)^{%.3g~`x`}"
eq_fmt <- "`y`~`=`~`%.3g + %.3g log(x)`"
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
View(df)
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
# geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
# geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
# geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
plot <- df %>%
ggplot(aes(x = buffer_size/1000, y = mean, group = Guild)) +
# geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
# geom_line(aes(color = Guild)) +
ylab("Coefficient of Determination R2") + xlab("Buffer Size (km)") +
theme_classic() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
ylim(c(0, 0.6)) +
geom_hline(aes(yintercept = 0), linetype = 2)  +
# geom_point() +
geom_smooth(method = 'lm',
formula = 'y ~ log(x)',
aes(color = Guild),
se = FALSE) +
stat_poly_eq(mapping = aes(x = buffer_size/1000, y = mean, group = Guild,
label = sprintf(eq_fmt,
after_stat(b_0),
after_stat(b_1))),
formula =  y ~ log(x),
output.type = "numeric",
parse = TRUE
)
plot
tmp <- fread('/Users/johanvandenhoogen/Downloads/Result_26.csv')
tmp
